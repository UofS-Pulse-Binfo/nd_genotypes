<?php

module_load_include('tripal_views','tripal_views.api','inc');

/**
 * Ran when the module is installed
 */
function nd_genotypes_install () {

	// Add nd_genotype_experiment materialized view
  $previous_db = tripal_db_set_active('chado');
  if (db_table_exists('nd_genotype_experiment')) {
    $sql = "DROP TABLE nd_genotype_experiment";
    db_query($sql);
  }
  tripal_db_set_active($previous_db);
	nd_genotypes_register_nd_genotype_experiment_mview();

  // Add Generic Bulk Loader
	nd_genotypes_add_generic_experiment_bulk_loader();

}

function nd_genotypes_enable () {  
  if (module_exists('tripal_views')) {
    tripal_views_integration_add_entry(nd_genotype_experiment_views_integration());
  }
}

function nd_genotypes_disable () {
  if (module_exists('tripal_views')) {
    tripal_views_integration_remove_entry_by_table_name('nd_genotype_experiment',9);
  }
}

/**
 * Ran when the module is uninstalled
 */
function nd_genotypes_uninstall () {

	// remove the nd_genotype_experiment materialized view
   $mview = tripal_mviews_get_mview_id('nd_genotype_experiment');
   if($mview){
	   tripal_mviews_action('delete',$mview);
	}
	
}

/** 
 * Register a Materialized View for stock=>genotype=>feature data
 * 
 * This allows for quicker querying of data by doing the majority of the
 * JOINS ahead of time.
 *
 * Each row in this table corresponds to a genotype observed in a stock. 
 * Assumptions: 
 *   - 1 nd_experiment_stock per nd_experiment
 *   - 1 nd_experiment_project per nd_experiment
 *   - 1+ nd_experiment_genotype per nd_experiment
 *   - 1 feature per genotype
 *
 * Columns:
 *   - stock_id: unique key of the stock the genotype was sampled from
 *   - stock_name: the human-readable name of the stock the genotype was sampled from
 *   - stock_experiment_relationship_type_id: role stock played in this experiment
 *   - stock_experiment_relationship_type_name: role stock played in this experiment
 *   - genotype_id: unique key of genotype resulting from experiment
 *   - genotype_uniquename: unique name of genotype resulting from experiment
 *   - genotype_description: genotype resulting from experiment
 *   - feature_genotype_relationship_type_id: how genotype is connected to feature
 *   - feature_genotype_relationship_type_name: how genotype is connected to feature
 *   - feature_id: the unique key of the feature the genotype is connected to
 *   - feature_name: the human-readable name of the feature the genotype is connected to
 *   - nd_experiment_id: the genotype experiment unique key
 *   - nd_geolocation_id: unique key of the geolocation where this experiment was performed
 *   - nd_geolocation_description: description of the geolocation where this experiment was performed
 *   - project_id: the unique key of the project this genotype experiment is associated with
 *   - project_name: the name of the project this genotype experiment is associated with
 *   - nd_genotype_experiment_id: unique key for this table
 */
function nd_genotypes_register_nd_genotype_experiment_mview () {

	$view_name = 'nd_genotype_experiment';
	$schema_definition = 'stock_id integer,
												stock_name varchar(255),
												stock_experiment_relationship_type_id integer,
												stock_experiment_relationship_type_name varchar(255),
												genotype_id integer[],
												genotype_uniquename text[],
												genotype_description text[],
												feature_genotype_relationship_type_id integer[],
												feature_genotype_relationship_type_name varchar(255)[],
												feature_id integer[],
												feature_name varchar(255)[],
												nd_experiment_id integer,
												nd_geolocation_id integer,
												nd_geolocation_description varchar(255),
												project_id integer,
												project_name varchar(255),
												nd_genotype_experiment_id serial';
	$sql = "SELECT 
						s.stock_id, 
						s.name as stock_name, 
						ndes.type_id as stock_experiment_relationship_type_id,
						ndes_cvt.name as stock_experiment_relationship_type_name,
						array_agg(g.genotype_id) as genotype_id, 
						array_agg(g.uniquename) as genotype_uniquename, 
						array_agg(g.description) as genotype_description, 
						array_agg(fg.cvterm_id) as feature_genotype_relationship_type_id,
						array_agg(fg_cvt.name) as feature_genotype_relationship_type_name,
						array_agg(f.feature_id) as feature_id, 
						array_agg(f.name) as feature_name, 
						nde.nd_experiment_id, 
						nde.nd_geolocation_id, 
						ndg.description as nd_geolocation_description,
						p.project_id, 
						p.name as project_name
					FROM nd_experiment nde 
					LEFT JOIN nd_experiment_project ndep ON ndep.nd_experiment_id=nde.nd_experiment_id 
					LEFT JOIN nd_geolocation ndg ON ndg.nd_geolocation_id=nde.nd_geolocation_id
					LEFT JOIN project p ON p.project_id=ndep.project_id 
					LEFT JOIN nd_experiment_stock ndes ON ndes.nd_experiment_id=nde.nd_experiment_id 
					LEFT JOIN stock s ON s.stock_id=ndes.stock_id 
					LEFT JOIN cvterm ndes_cvt ON ndes_cvt.cvterm_id=ndes.type_id
					LEFT JOIN nd_experiment_genotype ndeg ON ndeg.nd_experiment_id=nde.nd_experiment_id 
					LEFT JOIN genotype g ON g.genotype_id=ndeg.genotype_id 
					LEFT JOIN feature_genotype fg ON fg.genotype_id=g.genotype_id 
					LEFT JOIN cvterm fg_cvt ON fg_cvt.cvterm_id=fg.cvterm_id
					LEFT JOIN feature f ON f.feature_id=fg.feature_id
					GROUP BY 
					  s.stock_id, 
					  s.name, 
					  ndes.type_id, 
					  ndes_cvt.name,
					  nde.nd_experiment_id, 
					  nde.nd_geolocation_id, 
					  ndg.description, 
					  p.project_id, 
					  p.name";

		//create
    tripal_add_mview(
      // view name
      $view_name,
      // module creating materialized view
      'nd_genotypes',
      // view table name
      $view_name,
      // schema definition
      $schema_definition,
      // columns to index
      'nd_genotype_experiment_id',
      // SQL to populate materialized view
      $sql,
      // special index
      ''
    );
    
    //Populate
    $mview_id = tripal_mviews_get_mview_id($view_name);
    tripal_update_mview($mview_id);
}

/**
 * Provide default views integration for the nd_genotype_experiment Materialized View
 */
function nd_genotype_experiment_views_integration () {

 return array(
    'table' => 'nd_genotype_experiment',
    'type' => 'mview',
    'name' => 'Natural Diversity Genotype Experiments',
    'description' => 'List genotype experiments.',
    'priority' => 9,
    'fields' => array(
      'stock_id' => array(
        'name' => 'stock_id',
        'title' => 'Stock ID',
        'type' => 'integer',
        'description' => 'the unique idenfier for stocks',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(
          'stock' => array(
            'table' => 'stock',
            'field' => 'stock_id',
          ),
        ),
      ),
			'stock_name' => array( 
			  'name' => 'stock_name',
			  'title' => 'Stock Name',
			  'type' => 'varchar(255)',
			  'description' => 'Human-readable stock name',
			  'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field'),
          'filter' => array('name' => 'chado_views_handler_filter_string'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'stock_experiment_relationship_type_id' => array( 
			  'name' => 'stock_experiment_relationship_type_id',
			  'title' => 'Stock <=> Experiment Relationship Type ID',
			  'description' => 'The type of relationship joining this stock to this genotype experiment.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'stock_experiment_relationship_type_name' => array( 
			  'name' => 'stock_experiment_relationship_type_name',
			  'title' => 'Stock <=> Experiment Relationship Type',
			  'description' => 'The type of relationship joining this stock to this genotype experiment.',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field'),
          'filter' => array('name' => 'chado_views_handler_filter_string'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'genotype_id' => array( 
			  'name' => 'genotype_id',
			  'title' => 'Genotype ID',
			  'description' => 'Unique IDs of the genotypes associated with this experiment',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(
          'genotype' => array(
            'table' => 'genotype',
            'field' => 'genotype_id',
            'handler' => 'views_handler_join_chado_aggregtor',
          ),
        ),
			),
			'genotype_uniquename' => array( 
			  'name' => 'genotype_uniquename',
			  'title' => 'Genotype Unique Name',
			  'description' => 'Unique name of the genotypes associated with this experiment',
			  'type' => 'text[]',
			  'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field'),
          'filter' => array('name' => 'chado_views_handler_filter_string'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'genotype_description' => array( 
			  'name' => 'genotype_description',
			  'title' => 'Genotype Allele',
			  'description' => 'The genotypes/alleles associated with this experiment',
			  'type' => 'text[]',
			  'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field'),
          'filter' => array('name' => 'chado_views_handler_filter_string'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_genotype_relationship_type_id' => array( 
			  'name' => 'feature_genotype_relationship_type_id',
			  'title' => 'Feature <=> Genotype Relationship Type ID',
			  'description' => 'The type of relationship this genotype has to this feature',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_genotype_relationship_type_name' => array( 
			  'name' => 'feature_genotype_relationship_type_name',
			  'title' => 'Feature <=> Genotype Relationship Type',
			  'description' => 'The type of relationship this genotype has to this feature',
			  'type' => 'varchar(255)[]',
			  'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field'),
          'filter' => array('name' => 'chado_views_handler_filter_string'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_id' => array( 
			  'name' => 'feature_id',
			  'title' => 'Feature ID',
			  'description' => 'Unique ID for features associated with this genotype experiment.',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(
          'feature' => array(
            'table' => 'feature',
            'field' => 'feature_id',
            'handler' => 'views_handler_join_chado_aggregtor',
          ),
        ),
			),
			'feature_name' => array( 
			  'name' => 'feature_name',
			  'title' => 'Feature Name',
			  'description' => 'Human-readable name of the features associated with this genotype experiment.',
			  'type' => 'varchar(255)[]',
			  'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field'),
          'filter' => array('name' => 'chado_views_handler_filter_string'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'nd_experiment_id' => array( 
			  'name' => 'nd_experiment_id',
			  'title' => 'ND Experiment ID',
			  'description' => 'Unique ID for this genotype experiment.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(
          'nd_experiment' => array(
            'table' => 'nd_experiment',
            'field' => 'nd_experiment_id'
          ),
        ),
			),
			'nd_geolocation_id' => array( 
			  'name' => 'nd_geolocation_id',
			  'title' => 'ND Geolocation ID',
			  'description' => 'Unique ID for the location in which this experiment was done.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(
          'nd_geolocation' => array(
            'table' => 'nd_geolocation',
            'field' => 'nd_geolocation_id',
          ),
        ),
			),
			'nd_geolocation_description' => array( 
			  'name' => 'nd_geolocation_description',
			  'title' => 'ND Geolocation Description',
			  'description' => 'A short description of the location where this experiment was done',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field'),
          'filter' => array('name' => 'chado_views_handler_filter_string'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'project_id' => array( 
			  'name' => 'project_id',
			  'title' => 'Project ID',
			  'description' => 'Unique ID of the project this experiment was part of',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(
          'project' => array(
            'table' => 'project',
            'field' => 'project_id',
          ),
        ),
			),
			'project_name' => array( 
			  'name' => 'project_name',
			  'title' => 'Project Name',
			  'description' => 'Human-readable name of the project this experiment was part of',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field'),
          'filter' => array('name' => 'chado_views_handler_filter_string'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
			'nd_genotype_experiment_id' => array( 
			  'name' => 'nd_genotype_experiment_id',
			  'title' => 'ND Genotype Experiment ID',
			  'description' => 'Unique ID of the Genotype Experiment',
			  'type' => 'serial',
        'handlers' => array(
          'field' => array('name' => 'chado_views_handler_field_numeric'),
          'filter' => array('name' => 'chado_views_handler_filter_numeric'),
          'sort' => array('name' => 'chado_views_handler_sort'),
        ),
        'joins' => array(),
			),
    ),
  );
}

/** 
 * Create a Generic Genotype Experiment Bulk Loader and save it to the
 * tripal_bulk_loader_template table for use in Bulk Loading Jobs
 *
 * Assumes a tsv file with the following columns:
 *  - feature.uniquename: the marker the genotypes should be associated with (must already exist)
 *  - genotype.description: the actual genotype called (ie: AA, 300bp, present, etc.)
 *
 * The following fields are constants per bulk loading job and will be able to be entered 
 * once the job is created (* -required):
 * ( currently the template needs to be edited )
 *  - stock.uniquename*: the stock the genotypes were called in (must already exist)
 *  - genotype column*: column the genotypes are in (index starts at 1)
 *  - project.uniquename*: the project to associate the genotypes with (must already exist)
 *  - nd_geolocation.description*: the location the genotyping experiment took place at (must already exist)
 *
 * This loader will create the following records (number of records per line in the file):
 *  - nd_experiment (1)
 *  - nd_experiment_genotype (1)
 *  - genotype record (0 or 1 -depending on if it already exists for that feature)
 *  - feature_genotype (0 or 1 -depending on if it already exists for that feature)
 *  - nd_experment_project (1)
 *  - nd_experiment_stock (1)
 *
 * @return
 *   template_id on success (both insert and update) and FALSE otherwise
 */
function nd_genotypes_add_generic_experiment_bulk_loader ($update = FALSE) {

	$template_name = 'ND Genotype: Generic Genotype Experiments';
	$serialized_template = 'a:16:{i:0;a:4:{s:5:"table";s:7:"feature";s:9:"record_id";s:16:"Feature (Marker)";s:6:"fields";a:1:{i:0;a:7:{s:4:"type";s:11:"table field";s:5:"title";s:10:"Uniquename";s:5:"field";s:10:"uniquename";s:8:"required";i:0;s:17:"spreadsheet sheet";s:6:"Sheet1";s:18:"spreadsheet column";s:1:"1";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:1;a:3:{s:5:"table";s:8:"genotype";s:9:"record_id";s:8:"Genotype";s:6:"fields";a:2:{i:0;a:11:{s:4:"type";s:11:"table field";s:5:"title";s:19:"Genotype Uniquename";s:5:"field";s:10:"uniquename";s:8:"required";i:0;s:17:"spreadsheet sheet";s:6:"Sheet1";s:18:"spreadsheet column";s:1:"3";s:5:"regex";a:2:{s:7:"pattern";a:1:{i:0;s:8:"/^(.*)$/";}s:7:"replace";a:1:{i:0;s:15:"<#column:1#>_\1";}}s:8:"priority";s:1:"1";s:11:"field_index";s:1:"0";s:7:"exposed";i:1;s:19:"exposed_description";s:116:"Genotype Column (contains allele call) -Marker name will be prefixed to the genotype to form the genotype uniquename";}i:1;a:11:{s:4:"type";s:11:"table field";s:5:"title";s:6:"Allele";s:5:"field";s:11:"description";s:8:"required";i:0;s:17:"spreadsheet sheet";s:6:"Sheet1";s:18:"spreadsheet column";s:1:"3";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:1:"1";s:11:"field_index";s:1:"1";s:7:"exposed";i:1;s:19:"exposed_description";s:38:"Genotype Column (contains allele call)";}}}i:2;a:4:{s:5:"table";s:2:"cv";s:9:"record_id";s:12:"CV -sequence";s:6:"fields";a:1:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:8:"sequence";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:3;a:4:{s:5:"table";s:6:"cvterm";s:9:"record_id";s:18:"CVterm -variant_of";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:10:"variant_of";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:2:"CV";s:5:"field";s:5:"cv_id";s:11:"foreign key";s:12:"CV -sequence";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:4;a:3:{s:5:"table";s:16:"feature_genotype";s:9:"record_id";s:19:"Feature => Genotype";s:6:"fields";a:5:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:7:"Feature";s:5:"field";s:10:"feature_id";s:11:"foreign key";s:16:"Feature (Marker)";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:8:"Genotype";s:5:"field";s:11:"genotype_id";s:11:"foreign key";s:8:"Genotype";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:2;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Rank";s:5:"field";s:4:"rank";s:8:"required";i:0;s:14:"constant value";s:1:"0";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:3;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:6:"cgroup";s:5:"field";s:6:"cgroup";s:8:"required";i:0;s:14:"constant value";s:1:"0";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:4;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:6:"cvterm";s:5:"field";s:9:"cvterm_id";s:11:"foreign key";s:18:"CVterm -variant_of";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}}i:5;a:4:{s:5:"table";s:2:"cv";s:9:"record_id";s:21:"CV -Natural Diversity";s:6:"fields";a:1:{i:0;a:8:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:17:"natural_diversity";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:1:"5";s:11:"field_index";s:1:"0";}}s:4:"mode";s:6:"select";}i:6;a:4:{s:5:"table";s:6:"cvterm";s:9:"record_id";s:18:"ND Experiment Type";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:14:"genotype_assay";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:2:"CV";s:5:"field";s:5:"cv_id";s:11:"foreign key";s:21:"CV -Natural Diversity";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:7;a:4:{s:5:"table";s:14:"nd_geolocation";s:9:"record_id";s:14:"ND Geolocation";s:6:"fields";a:1:{i:0;a:10:{s:4:"type";s:8:"constant";s:5:"title";s:23:"Geolocation Description";s:5:"field";s:11:"description";s:8:"required";i:0;s:14:"constant value";s:0:"";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:1:"7";s:11:"field_index";s:1:"0";s:16:"exposed_validate";i:1;s:7:"exposed";i:1;}}s:4:"mode";s:6:"select";}i:8;a:4:{s:5:"table";s:13:"nd_experiment";s:9:"record_id";s:13:"ND Experiment";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:4:"Type";s:5:"field";s:7:"type_id";s:11:"foreign key";s:18:"ND Experiment Type";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:8:"Location";s:5:"field";s:17:"nd_geolocation_id";s:11:"foreign key";s:14:"ND Geolocation";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"insert";}i:9;a:4:{s:5:"table";s:22:"nd_experiment_genotype";s:9:"record_id";s:25:"ND Experiment => Genotype";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:13:"ND Experiment";s:5:"field";s:16:"nd_experiment_id";s:11:"foreign key";s:13:"ND Experiment";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:8:"Genotype";s:5:"field";s:11:"genotype_id";s:11:"foreign key";s:8:"Genotype";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"insert";}i:10;a:4:{s:5:"table";s:7:"project";s:9:"record_id";s:7:"Project";s:6:"fields";a:1:{i:0;a:10:{s:4:"type";s:8:"constant";s:5:"title";s:12:"Project Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:0:"";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:2:"10";s:11:"field_index";s:1:"0";s:16:"exposed_validate";i:1;s:7:"exposed";i:1;}}s:4:"mode";s:6:"select";}i:11;a:4:{s:5:"table";s:21:"nd_experiment_project";s:9:"record_id";s:24:"ND Experiment => Project";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:13:"ND Experiment";s:5:"field";s:16:"nd_experiment_id";s:11:"foreign key";s:13:"ND Experiment";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:7:"Project";s:5:"field";s:10:"project_id";s:11:"foreign key";s:7:"Project";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"insert";}i:12;a:4:{s:5:"table";s:5:"stock";s:9:"record_id";s:5:"Stock";s:6:"fields";a:1:{i:0;a:10:{s:4:"type";s:8:"constant";s:5:"title";s:16:"Stock Uniquename";s:5:"field";s:10:"uniquename";s:8:"required";i:0;s:14:"constant value";s:0:"";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:2:"12";s:11:"field_index";s:1:"0";s:16:"exposed_validate";i:1;s:7:"exposed";i:1;}}s:4:"mode";s:6:"select";}i:13;a:4:{s:5:"table";s:2:"cv";s:9:"record_id";s:16:"CV -Relationship";s:6:"fields";a:1:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:12:"relationship";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:14;a:4:{s:5:"table";s:6:"cvterm";s:9:"record_id";s:21:"Stock Connection Type";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:15:"participates_in";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:2:"CV";s:5:"field";s:5:"cv_id";s:11:"foreign key";s:16:"CV -Relationship";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:15;a:4:{s:5:"table";s:19:"nd_experiment_stock";s:9:"record_id";s:22:"ND Experiment => Stock";s:6:"fields";a:3:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:13:"ND Experiment";s:5:"field";s:16:"nd_experiment_id";s:11:"foreign key";s:13:"ND Experiment";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:5:"Stock";s:5:"field";s:8:"stock_id";s:11:"foreign key";s:5:"Stock";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:2;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:15:"Connection Type";s:5:"field";s:7:"type_id";s:11:"foreign key";s:21:"Stock Connection Type";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"insert";}}';
	$record = array(
		'name' => $template_name,
		'template_array' => $serialized_template
	);
	
	// Check if it already exists
	$exists = db_fetch_object(db_query("SELECT * FROM {tripal_bulk_loader_template} WHERE name='%s'",$record['name']));
	if ($exists->template_id) {
		$record['template_id'] = $exists->template_id;
		if ($update) {
			// Update the existing template
			$success = drupal_write_record('tripal_bulk_loader_template',$record,'template_id');
			if ($success) {
				drupal_set_message('ND Genotype: Generic Genotype Experiments Bulk Loader Template Updated');
				return $exists->template_id;
			} else {
				drupal_set_message('Unable to update ND Genotype: Generic Genotype Experiments Bulk Loader Template','error');
				return FALSE;
			}			
		} else {
			drupal_set_message('ND Genotype: Generic Genotype Experiments Bulk Loader Template already exists.','warning');
			return $exists->template_id;
		}
		
		
	// if it doesn't already exist then insert it
	} else {
		$success = drupal_write_record('tripal_bulk_loader_template',$record);
		if ($success) {
			drupal_set_message('ND Genotype: Generic Genotype Experiments Bulk Loader Template Created');
			return $success['template_id'];
		} else {
			drupal_set_message('Unable to create ND Genotype: Generic Genotype Experiments Bulk Loader Template','error');
			return FALSE;
		}
	}
}