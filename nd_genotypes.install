<?php

//module_load_include('tripal_views','tripal_views.api','inc');

// Materialized Views
//require_once('mviews/nd_genotype_experiment.inc');
//require_once('mviews/nd_genotype_polymorphism.inc');
//require_once('mviews/nd_genotype_experiment_summary.inc');

/**
 * Ran when the module is installed
 */
function nd_genotypes_install () {
/**
	// Add nd_genotype_experiment materialized view
  $previous_db = tripal_db_set_active('chado');
  if (db_table_exists('nd_genotype_experiment')) {
    $sql = "DROP TABLE nd_genotype_experiment";
    db_query($sql);
  }
  tripal_db_set_active($previous_db);
	nd_genotypes_register_nd_genotype_experiment_mview();

	// Add nd_genotype_polymorphism materialized view
  $previous_db = tripal_db_set_active('chado');
  if (db_table_exists('nd_genotype_polymorphism')) {
    $sql = "DROP TABLE nd_genotype_polymorphism";
    db_query($sql);
  }
  tripal_db_set_active($previous_db);
	nd_genotypes_register_nd_genotype_polymoprhism_mview();

	// Add nd_genotype_experiment_summary materialized view
  $previous_db = tripal_db_set_active('chado');
  if (db_table_exists('nd_genotype_experiment_summary')) {
    $sql = "DROP TABLE nd_genotype_experiment_summary";
    db_query($sql);
  }
  tripal_db_set_active($previous_db);
	nd_genotypes_register_nd_genotype_experiment_summary_mview();

  // Add Generic Bulk Loader
	nd_genotypes_add_generic_experiment_bulk_loader();
*/
}

function nd_genotypes_enable () {

  // First add our special integration for the nd_genotype_experiment table
  // Although this is integrated by default (priority 10) already, we want to add
  // a more specific integration (priority 9).
  // ------------------------
  tripal_add_views_integration(nd_genotype_experiment_views_integration());

  // We also need to add reciprocal joins to the existing feature, genotype,
  // nd_experiment, nd_geolocation, project and stock integrations so that
  // nd_genotype_experiment fields can be added to views with a base table of
  // these types. These should be relationship only joins.
  // ------------------------
  $tables = array('feature', 'genotype', 'nd_experiment', 'nd_geolocation', 'project', 'stock');
  foreach ($tables as $table) {
    $key = $table . '_id';
    $join = array(
      'base_table' => $table,
      'base_field' => $key,
      'left_table' => 'nd_genotype_experiment',
      'left_field' => $key,
      'relationship_only' => 1,
    );
    tripal_add_join_to_views_integration($table, 7, $join);
  }

  nd_genotypes_add_project_count_mview();
}

function nd_genotypes_disable () {

  tripal_remove_views_integration(array(
    'table_name' => 'nd_genotype_experiment',
    'priority' => 9
  ));

}

/**
 * Ran when the module is uninstalled
 */
function nd_genotypes_uninstall () {
/*
	// remove the nd_genotype_experiment materialized view
   $mview = tripal_mviews_get_mview_id('nd_genotype_experiment');
   if($mview){
	   tripal_mviews_action('delete',$mview);
	}
*/
}

/**
 * Creates a materialized view that stores the type & number of features per organism
 *
 * @ingroup nd_genotypes
 */
function nd_genotypes_add_project_count_mview() {
  $view_name = 'project_organism_feature_count';
  $comment = 'Stores the type and number of features per organism per project';

  $schema = array(
    'description' => $comment,
    'table' => $view_name,
    'fields' => array(
      'project_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'organism_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'organism_name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'subtype' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'num_features' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'project_organism_feature_count_idx1' => array('project_id'),
      'project_organism_feature_count_idx1' => array('organism_id'),
      'project_organism_feature_count_idx2' => array('type'),
      'project_organism_feature_count_idx3' => array('subtype'),
    ),
  );

  $sql = "
    SELECT
      P.project_id,
      P.name,
      O.organism_id,
      O.genus||' '||O.species as organism_name,
      (CASE WHEN FT.name IN ('SNP','indel','MNP') THEN 'variant' WHEN FT.name='marker' THEN 'marker' ELSE 'sequence' END) as type,
      (CASE WHEN FT.name='marker' THEN FP.value ELSE FT.name END) as subtype,
      count(distinct(PF.feature_id)) as num_features
    FROM project_feature PF
      LEFT JOIN project P ON P.project_id=PF.project_id
      LEFT JOIN feature F ON F.feature_id=PF.feature_id
      LEFT JOIN organism O ON O.organism_id=F.organism_id
      LEFT JOIN cvterm FT ON FT.cvterm_id=F.type_id
      LEFT JOIN featureprop FP ON FP.feature_id=F.feature_id
        AND FP.type_id IN (SELECT cvterm_id FROM cvterm WHERE name='marker_type')
    GROUP BY P.project_id, O.organism_id, FT.name, FP.value
    ORDER BY P.project_id, O.organism_id, type
  ";

  tripal_add_mview($view_name, 'nd_genotypes', $schema, $sql, $comment);
}

/**
 * Provide default views integration for the nd_genotype_experiment Materialized View
 */
function nd_genotype_experiment_views_integration () {

 return array(
    'table' => 'nd_genotype_experiment',
    'type' => 'custom',
    'name' => 'Natural Diversity Genotype Experiments',
    'description' => 'List genotype experiments.',
    'priority' => 9,
    'base_table' => TRUE,
    'fields' => array(
      'stock_id' => array(
        'name' => 'stock_id',
        'title' => 'Stock ID',
        'type' => 'integer',
        'description' => 'the unique idenfier for stocks',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'stock' => array(
            'table' => 'stock',
            'field' => 'stock_id',
          ),
        ),
      ),
			'stock_name' => array(
			  'name' => 'stock_name',
			  'title' => 'Stock Name',
			  'type' => 'varchar(255)',
			  'description' => 'Human-readable stock name',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'stock_experiment_relationship_type_id' => array(
			  'name' => 'stock_experiment_relationship_type_id',
			  'title' => 'Stock <=> Experiment Relationship Type ID',
			  'description' => 'The type of relationship joining this stock to this genotype experiment.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'stock_experiment_relationship_type_name' => array(
			  'name' => 'stock_experiment_relationship_type_name',
			  'title' => 'Stock <=> Experiment Relationship Type',
			  'description' => 'The type of relationship joining this stock to this genotype experiment.',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'genotype_id' => array(
			  'name' => 'genotype_id',
			  'title' => 'Genotype ID',
			  'description' => 'Unique IDs of the genotypes associated with this experiment',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'genotype' => array(
            'table' => 'genotype',
            'field' => 'genotype_id',
          ),
        ),
			),
			'genotype_uniquename' => array(
			  'name' => 'genotype_uniquename',
			  'title' => 'Genotype Unique Name',
			  'description' => 'Unique name of the genotypes associated with this experiment',
			  'type' => 'text[]',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'genotype_description' => array(
			  'name' => 'genotype_description',
			  'title' => 'Genotype Allele',
			  'description' => 'The genotypes/alleles associated with this experiment',
			  'type' => 'text[]',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_genotype_relationship_type_id' => array(
			  'name' => 'feature_genotype_relationship_type_id',
			  'title' => 'Feature <=> Genotype Relationship Type ID',
			  'description' => 'The type of relationship this genotype has to this feature',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_genotype_relationship_type_name' => array(
			  'name' => 'feature_genotype_relationship_type_name',
			  'title' => 'Feature <=> Genotype Relationship Type',
			  'description' => 'The type of relationship this genotype has to this feature',
			  'type' => 'varchar(255)[]',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_id' => array(
			  'name' => 'feature_id',
			  'title' => 'Feature ID',
			  'description' => 'Unique ID for features associated with this genotype experiment.',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'feature' => array(
            'table' => 'feature',
            'field' => 'feature_id',
          ),
        ),
			),
			'feature_name' => array(
			  'name' => 'feature_name',
			  'title' => 'Feature Name',
			  'description' => 'Human-readable name of the features associated with this genotype experiment.',
			  'type' => 'varchar(255)[]',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'nd_experiment_id' => array(
			  'name' => 'nd_experiment_id',
			  'title' => 'ND Experiment ID',
			  'description' => 'Unique ID for this genotype experiment.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'nd_experiment' => array(
            'table' => 'nd_experiment',
            'field' => 'nd_experiment_id'
          ),
        ),
			),
			'nd_geolocation_id' => array(
			  'name' => 'nd_geolocation_id',
			  'title' => 'ND Geolocation ID',
			  'description' => 'Unique ID for the location in which this experiment was done.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'nd_geolocation' => array(
            'table' => 'nd_geolocation',
            'field' => 'nd_geolocation_id',
          ),
        ),
			),
			'nd_geolocation_description' => array(
			  'name' => 'nd_geolocation_description',
			  'title' => 'ND Geolocation Description',
			  'description' => 'A short description of the location where this experiment was done',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'project_id' => array(
			  'name' => 'project_id',
			  'title' => 'Project ID',
			  'description' => 'Unique ID of the project this experiment was part of',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'project' => array(
            'table' => 'project',
            'field' => 'project_id',
          ),
        ),
			),
			'project_name' => array(
			  'name' => 'project_name',
			  'title' => 'Project Name',
			  'description' => 'Human-readable name of the project this experiment was part of',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'polymorphic_with' => array(
			  'name' => 'polymorphic_with',
			  'title' => 'Polymorphic With',
			  'description' => 'The stock_id of stocks with a different allele than the current one.',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'nd_genotype_experiment_id' => array(
			  'name' => 'nd_genotype_experiment_id',
			  'title' => 'ND Genotype Experiment ID',
			  'description' => 'Unique ID of the Genotype Experiment',
			  'type' => 'serial',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),

			// Calculated Field: genotype.description from nd_genotype_experiment.genotype_description
      // Allows filtering based on germplasm
      'germplasm_genotype' => array(
        'name' => 'germplasm_genotype',
        'title' => 'Genotypes for Stock',
        'description' => 'Genotypes of a given stock for each marker.',
        'type' => 'text',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_germplasm_genotype'),
          'filter' => array('name' => 'views_handler_filter_germplasm_genotype_by_stock'),
        ),
        'joins' => array(),
      ),

      // Calculated Filter: Allows dynamic addition of multiple germplasm_genotype fields
      'add_germplasm_genotype' => array(
        'name' => 'add_germplasm_genotype',
        'title' => 'Genotypes for Multiple Stocks',
        'description' => 'Genotypes of a given stock for each marker; form allows specifying multiple stocks.',
        'type' => 'text',
        'handlers' => array(
          'filter' => array('name' => 'views_handler_filter_add_germplasm_genotype_by_stock_field_filter'),
        ),
        'joins' => array(),
      ),

      // Calculated Filter: Allows dynamic addition of multiple germplasm_genotype fields
      'polymorphic_germplasm' => array(
        'name' => 'polymorphic_germplasm',
        'title' => 'Polymorphic Markers',
        'description' => 'Only show markers polymorphic between two stocks.',
        'type' => 'text',
        'handlers' => array(
          'filter' => array('name' => 'views_handler_filter_germplasm_genotype_polymorphic'),
        ),
        'joins' => array(),
      ),
    ),
  );
}

/**
 * Create a Generic Genotype Experiment Bulk Loader and save it to the
 * tripal_bulk_loader_template table for use in Bulk Loading Jobs
 *
 * Assumes a tsv file with the following columns:
 *  - feature.uniquename: the marker the genotypes should be associated with (must already exist)
 *  - genotype.description: the actual genotype called (ie: AA, 300bp, present, etc.)
 *
 * The following fields are constants per bulk loading job and will be able to be entered
 * once the job is created (* -required):
 * ( currently the template needs to be edited )
 *  - stock.uniquename*: the stock the genotypes were called in (must already exist)
 *  - genotype column*: column the genotypes are in (index starts at 1)
 *  - project.uniquename*: the project to associate the genotypes with (must already exist)
 *  - nd_geolocation.description*: the location the genotyping experiment took place at (must already exist)
 *
 * This loader will create the following records (number of records per line in the file):
 *  - nd_experiment (1)
 *  - nd_experiment_genotype (1)
 *  - genotype record (0 or 1 -depending on if it already exists for that feature)
 *  - feature_genotype (0 or 1 -depending on if it already exists for that feature)
 *  - nd_experment_project (1)
 *  - nd_experiment_stock (1)
 *
 * @return
 *   template_id on success (both insert and update) and FALSE otherwise
 */
function nd_genotypes_add_generic_experiment_bulk_loader ($update = FALSE) {

	$template_name = 'ND Genotype: Generic Genotype Experiments';
	$serialized_template = 'a:16:{i:0;a:4:{s:5:"table";s:7:"feature";s:9:"record_id";s:16:"Feature (Marker)";s:6:"fields";a:1:{i:0;a:7:{s:4:"type";s:11:"table field";s:5:"title";s:10:"Uniquename";s:5:"field";s:10:"uniquename";s:8:"required";i:0;s:17:"spreadsheet sheet";s:6:"Sheet1";s:18:"spreadsheet column";s:1:"1";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:1;a:3:{s:5:"table";s:8:"genotype";s:9:"record_id";s:8:"Genotype";s:6:"fields";a:2:{i:0;a:11:{s:4:"type";s:11:"table field";s:5:"title";s:19:"Genotype Uniquename";s:5:"field";s:10:"uniquename";s:8:"required";i:0;s:17:"spreadsheet sheet";s:6:"Sheet1";s:18:"spreadsheet column";s:1:"3";s:5:"regex";a:2:{s:7:"pattern";a:1:{i:0;s:8:"/^(.*)$/";}s:7:"replace";a:1:{i:0;s:15:"<#column:1#>_\1";}}s:8:"priority";s:1:"1";s:11:"field_index";s:1:"0";s:7:"exposed";i:1;s:19:"exposed_description";s:116:"Genotype Column (contains allele call) -Marker name will be prefixed to the genotype to form the genotype uniquename";}i:1;a:11:{s:4:"type";s:11:"table field";s:5:"title";s:6:"Allele";s:5:"field";s:11:"description";s:8:"required";i:0;s:17:"spreadsheet sheet";s:6:"Sheet1";s:18:"spreadsheet column";s:1:"3";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:1:"1";s:11:"field_index";s:1:"1";s:7:"exposed";i:1;s:19:"exposed_description";s:38:"Genotype Column (contains allele call)";}}}i:2;a:4:{s:5:"table";s:2:"cv";s:9:"record_id";s:12:"CV -sequence";s:6:"fields";a:1:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:8:"sequence";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:3;a:4:{s:5:"table";s:6:"cvterm";s:9:"record_id";s:18:"CVterm -variant_of";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:10:"variant_of";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:2:"CV";s:5:"field";s:5:"cv_id";s:11:"foreign key";s:12:"CV -sequence";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:4;a:3:{s:5:"table";s:16:"feature_genotype";s:9:"record_id";s:19:"Feature => Genotype";s:6:"fields";a:5:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:7:"Feature";s:5:"field";s:10:"feature_id";s:11:"foreign key";s:16:"Feature (Marker)";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:8:"Genotype";s:5:"field";s:11:"genotype_id";s:11:"foreign key";s:8:"Genotype";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:2;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Rank";s:5:"field";s:4:"rank";s:8:"required";i:0;s:14:"constant value";s:1:"0";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:3;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:6:"cgroup";s:5:"field";s:6:"cgroup";s:8:"required";i:0;s:14:"constant value";s:1:"0";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:4;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:6:"cvterm";s:5:"field";s:9:"cvterm_id";s:11:"foreign key";s:18:"CVterm -variant_of";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}}i:5;a:4:{s:5:"table";s:2:"cv";s:9:"record_id";s:21:"CV -Natural Diversity";s:6:"fields";a:1:{i:0;a:8:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:17:"natural_diversity";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:1:"5";s:11:"field_index";s:1:"0";}}s:4:"mode";s:6:"select";}i:6;a:4:{s:5:"table";s:6:"cvterm";s:9:"record_id";s:18:"ND Experiment Type";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:14:"genotype_assay";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:2:"CV";s:5:"field";s:5:"cv_id";s:11:"foreign key";s:21:"CV -Natural Diversity";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:7;a:4:{s:5:"table";s:14:"nd_geolocation";s:9:"record_id";s:14:"ND Geolocation";s:6:"fields";a:1:{i:0;a:10:{s:4:"type";s:8:"constant";s:5:"title";s:23:"Geolocation Description";s:5:"field";s:11:"description";s:8:"required";i:0;s:14:"constant value";s:0:"";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:1:"7";s:11:"field_index";s:1:"0";s:16:"exposed_validate";i:1;s:7:"exposed";i:1;}}s:4:"mode";s:6:"select";}i:8;a:4:{s:5:"table";s:13:"nd_experiment";s:9:"record_id";s:13:"ND Experiment";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:4:"Type";s:5:"field";s:7:"type_id";s:11:"foreign key";s:18:"ND Experiment Type";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:8:"Location";s:5:"field";s:17:"nd_geolocation_id";s:11:"foreign key";s:14:"ND Geolocation";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"insert";}i:9;a:4:{s:5:"table";s:22:"nd_experiment_genotype";s:9:"record_id";s:25:"ND Experiment => Genotype";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:13:"ND Experiment";s:5:"field";s:16:"nd_experiment_id";s:11:"foreign key";s:13:"ND Experiment";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:8:"Genotype";s:5:"field";s:11:"genotype_id";s:11:"foreign key";s:8:"Genotype";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"insert";}i:10;a:4:{s:5:"table";s:7:"project";s:9:"record_id";s:7:"Project";s:6:"fields";a:1:{i:0;a:10:{s:4:"type";s:8:"constant";s:5:"title";s:12:"Project Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:0:"";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:2:"10";s:11:"field_index";s:1:"0";s:16:"exposed_validate";i:1;s:7:"exposed";i:1;}}s:4:"mode";s:6:"select";}i:11;a:4:{s:5:"table";s:21:"nd_experiment_project";s:9:"record_id";s:24:"ND Experiment => Project";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:13:"ND Experiment";s:5:"field";s:16:"nd_experiment_id";s:11:"foreign key";s:13:"ND Experiment";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:7:"Project";s:5:"field";s:10:"project_id";s:11:"foreign key";s:7:"Project";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"insert";}i:12;a:4:{s:5:"table";s:5:"stock";s:9:"record_id";s:5:"Stock";s:6:"fields";a:1:{i:0;a:10:{s:4:"type";s:8:"constant";s:5:"title";s:16:"Stock Uniquename";s:5:"field";s:10:"uniquename";s:8:"required";i:0;s:14:"constant value";s:0:"";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}s:8:"priority";s:2:"12";s:11:"field_index";s:1:"0";s:16:"exposed_validate";i:1;s:7:"exposed";i:1;}}s:4:"mode";s:6:"select";}i:13;a:4:{s:5:"table";s:2:"cv";s:9:"record_id";s:16:"CV -Relationship";s:6:"fields";a:1:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:12:"relationship";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:14;a:4:{s:5:"table";s:6:"cvterm";s:9:"record_id";s:21:"Stock Connection Type";s:6:"fields";a:2:{i:0;a:6:{s:4:"type";s:8:"constant";s:5:"title";s:4:"Name";s:5:"field";s:4:"name";s:8:"required";i:0;s:14:"constant value";s:15:"participates_in";s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:2:"CV";s:5:"field";s:5:"cv_id";s:11:"foreign key";s:16:"CV -Relationship";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"select";}i:15;a:4:{s:5:"table";s:19:"nd_experiment_stock";s:9:"record_id";s:22:"ND Experiment => Stock";s:6:"fields";a:3:{i:0;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:13:"ND Experiment";s:5:"field";s:16:"nd_experiment_id";s:11:"foreign key";s:13:"ND Experiment";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:1;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:5:"Stock";s:5:"field";s:8:"stock_id";s:11:"foreign key";s:5:"Stock";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}i:2;a:6:{s:4:"type";s:11:"foreign key";s:5:"title";s:15:"Connection Type";s:5:"field";s:7:"type_id";s:11:"foreign key";s:21:"Stock Connection Type";s:8:"required";i:0;s:5:"regex";a:1:{s:7:"pattern";a:0:{}}}}s:4:"mode";s:6:"insert";}}';
	$record = array(
		'name' => $template_name,
		'template_array' => $serialized_template
	);

	// Check if it already exists
	$exists = db_fetch_object(db_query("SELECT * FROM {tripal_bulk_loader_template} WHERE name='%s'",$record['name']));
	if ($exists->template_id) {
		$record['template_id'] = $exists->template_id;
		if ($update) {
			// Update the existing template
			$success = drupal_write_record('tripal_bulk_loader_template',$record,'template_id');
			if ($success) {
				drupal_set_message('ND Genotype: Generic Genotype Experiments Bulk Loader Template Updated');
				return $exists->template_id;
			} else {
				drupal_set_message('Unable to update ND Genotype: Generic Genotype Experiments Bulk Loader Template','error');
				return FALSE;
			}
		} else {
			drupal_set_message('ND Genotype: Generic Genotype Experiments Bulk Loader Template already exists.','warning');
			return $exists->template_id;
		}


	// if it doesn't already exist then insert it
	} else {
		$success = drupal_write_record('tripal_bulk_loader_template',$record);
		if ($success) {
			drupal_set_message('ND Genotype: Generic Genotype Experiments Bulk Loader Template Created');
			return $success['template_id'];
		} else {
			drupal_set_message('Unable to create ND Genotype: Generic Genotype Experiments Bulk Loader Template','error');
			return FALSE;
		}
	}
}