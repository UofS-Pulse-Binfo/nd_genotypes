<?php

//module_load_include('tripal_views','tripal_views.api','inc');

// Materialized Views
require_once 'includes/mviews/nd_genotype_experiment.inc';
require_once 'includes/nd_genotypes.bulk_loader_template.inc';

/**
 * Implements hook_enable().
 *
 * When the module is enabled:
 *   1. Add the nd_genotype_experiment materialized view
 *   2. Add ND Genotype Bulk Loader
 */
function nd_genotypes_install () {

	// Add nd_genotype_experiment MView
  nd_genotypes_register_nd_genotype_experiment_mview();

  // Add Generic Bulk Loader
  if (module_exists('tripal_bulk_loader')) {
 	  nd_genotypes_add_generic_experiment_bulk_loader();
  }

    db_update('system')
    ->fields(array('weight' => 2))
    ->condition('name', 'nd_genotypes', '=')
    ->execute();
}

/**
 * Implements hook_enable().
 *
 * When the module is enabled:
 *   1. Add nd_genotype_experiment views integration
 *   2. Add reciprocal joins to linked tables
 */
function nd_genotypes_enable () {

  // First add our special integration for the nd_genotype_experiment table
  // Although this is integrated by default (priority 10) already, we want to add
  // a more specific integration (priority 9).
  // ------------------------
  tripal_add_views_integration(nd_genotype_experiment_views_integration());

  // We also need to add reciprocal joins to the existing feature, genotype,
  // nd_experiment, nd_geolocation, project and stock integrations so that
  // nd_genotype_experiment fields can be added to views with a base table of
  // these types. These should be relationship only joins.
  // ------------------------
  $tables = array('feature', 'genotype', 'nd_experiment', 'nd_geolocation', 'project', 'stock');
  foreach ($tables as $table) {
    $key = $table . '_id';
    $join = array(
      'base_table' => $table,
      'base_field' => $key,
      'left_table' => 'nd_genotype_experiment',
      'left_field' => $key,
      'relationship_only' => 1,
    );
    tripal_add_join_to_views_integration($table, 7, $join);
  }

}

/**
 * Implements hook_disable().
 *
 * When the module is disabled:
 *   1. Removes views integrations
 *   2. Disables default views
 */
function nd_genotypes_disable () {

  tripal_disable_view('nd_genotypes_feature_genotype_chart_pie');
  tripal_disable_view('nd_genotypes_genotype_matrix');
  tripal_disable_view('nd_genotypes_genotype_matrix_germplasm_list');

  tripal_remove_views_integration(array(
    'table_name' => 'nd_genotype_experiment',
    'priority' => 9
  ));

}

/**
 * Implements hook_uninstall().
 *
 * When the module is uninstalled:
 *   1. Removes materialized view
 */
function nd_genotypes_uninstall () {

	// remove the nd_genotype_experiment materialized view
   $mview = tripal_mviews_get_mview_id('nd_genotype_experiment');
   if($mview){
	   tripal_mviews_action('delete',$mview);
	}

}

/**
 * Creates a materialized view that stores the type & number of features per organism
 *
 * @TODO: IS THIS NEEDED?
 *
 * @ingroup nd_genotypes
 */
function nd_genotypes_add_project_count_mview() {
  $view_name = 'project_organism_feature_count';
  $comment = 'Stores the type and number of features per organism per project';

  $schema = array(
    'description' => $comment,
    'table' => $view_name,
    'fields' => array(
      'project_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'organism_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'organism_name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'subtype' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'num_features' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'project_organism_feature_count_idx1' => array('project_id'),
      'project_organism_feature_count_idx1' => array('organism_id'),
      'project_organism_feature_count_idx2' => array('type'),
      'project_organism_feature_count_idx3' => array('subtype'),
    ),
  );

  $sql = "
    SELECT
      P.project_id,
      P.name,
      O.organism_id,
      O.genus||' '||O.species as organism_name,
      (CASE WHEN FT.name IN ('SNP','indel','MNP') THEN 'variant' WHEN FT.name='marker' THEN 'marker' ELSE 'sequence' END) as type,
      (CASE WHEN FT.name='marker' THEN FP.value ELSE FT.name END) as subtype,
      count(distinct(PF.feature_id)) as num_features
    FROM project_feature PF
      LEFT JOIN project P ON P.project_id=PF.project_id
      LEFT JOIN feature F ON F.feature_id=PF.feature_id
      LEFT JOIN organism O ON O.organism_id=F.organism_id
      LEFT JOIN cvterm FT ON FT.cvterm_id=F.type_id
      LEFT JOIN featureprop FP ON FP.feature_id=F.feature_id
        AND FP.type_id IN (SELECT cvterm_id FROM cvterm WHERE name='marker_type')
    GROUP BY P.project_id, O.organism_id, FT.name, FP.value
    ORDER BY P.project_id, O.organism_id, type
  ";

  tripal_add_mview($view_name, 'nd_genotypes', $schema, $sql, $comment);
}

/**
 * Provide default views integration for the nd_genotype_experiment Materialized View
 */
function nd_genotype_experiment_views_integration () {

 return array(
    'table' => 'nd_genotype_experiment',
    'type' => 'custom',
    'name' => 'Natural Diversity Genotype Experiments',
    'description' => 'List genotype experiments.',
    'priority' => 9,
    'base_table' => TRUE,
    'fields' => array(
      'stock_id' => array(
        'name' => 'stock_id',
        'title' => 'Stock ID',
        'type' => 'integer',
        'description' => 'the unique idenfier for stocks',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'stock' => array(
            'table' => 'stock',
            'field' => 'stock_id',
          ),
        ),
      ),
			'stock_name' => array(
			  'name' => 'stock_name',
			  'title' => 'Stock Name',
			  'type' => 'varchar(255)',
			  'description' => 'Human-readable stock name',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'stock_experiment_relationship_type_id' => array(
			  'name' => 'stock_experiment_relationship_type_id',
			  'title' => 'Stock <=> Experiment Relationship Type ID',
			  'description' => 'The type of relationship joining this stock to this genotype experiment.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'stock_experiment_relationship_type_name' => array(
			  'name' => 'stock_experiment_relationship_type_name',
			  'title' => 'Stock <=> Experiment Relationship Type',
			  'description' => 'The type of relationship joining this stock to this genotype experiment.',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'genotype_id' => array(
			  'name' => 'genotype_id',
			  'title' => 'Genotype ID',
			  'description' => 'Unique IDs of the genotypes associated with this experiment',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'genotype' => array(
            'table' => 'genotype',
            'field' => 'genotype_id',
          ),
        ),
			),
			'genotype_uniquename' => array(
			  'name' => 'genotype_uniquename',
			  'title' => 'Genotype Unique Name',
			  'description' => 'Unique name of the genotypes associated with this experiment',
			  'type' => 'text[]',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'genotype_description' => array(
			  'name' => 'genotype_description',
			  'title' => 'Genotype Allele',
			  'description' => 'The genotypes/alleles associated with this experiment',
			  'type' => 'text[]',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_genotype_relationship_type_id' => array(
			  'name' => 'feature_genotype_relationship_type_id',
			  'title' => 'Feature <=> Genotype Relationship Type ID',
			  'description' => 'The type of relationship this genotype has to this feature',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_genotype_relationship_type_name' => array(
			  'name' => 'feature_genotype_relationship_type_name',
			  'title' => 'Feature <=> Genotype Relationship Type',
			  'description' => 'The type of relationship this genotype has to this feature',
			  'type' => 'varchar(255)[]',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'feature_id' => array(
			  'name' => 'feature_id',
			  'title' => 'Feature ID',
			  'description' => 'Unique ID for features associated with this genotype experiment.',
			  'type' => 'integer[]',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'feature' => array(
            'table' => 'feature',
            'field' => 'feature_id',
          ),
        ),
			),
			'feature_name' => array(
			  'name' => 'feature_name',
			  'title' => 'Feature Name',
			  'description' => 'Human-readable name of the features associated with this genotype experiment.',
			  'type' => 'varchar(255)[]',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'nd_experiment_id' => array(
			  'name' => 'nd_experiment_id',
			  'title' => 'ND Experiment ID',
			  'description' => 'Unique ID for this genotype experiment.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'nd_experiment' => array(
            'table' => 'nd_experiment',
            'field' => 'nd_experiment_id'
          ),
        ),
			),
			'nd_geolocation_id' => array(
			  'name' => 'nd_geolocation_id',
			  'title' => 'ND Geolocation ID',
			  'description' => 'Unique ID for the location in which this experiment was done.',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'nd_geolocation' => array(
            'table' => 'nd_geolocation',
            'field' => 'nd_geolocation_id',
          ),
        ),
			),
			'nd_geolocation_description' => array(
			  'name' => 'nd_geolocation_description',
			  'title' => 'ND Geolocation Description',
			  'description' => 'A short description of the location where this experiment was done',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'project_id' => array(
			  'name' => 'project_id',
			  'title' => 'Project ID',
			  'description' => 'Unique ID of the project this experiment was part of',
			  'type' => 'integer',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(
          'project' => array(
            'table' => 'project',
            'field' => 'project_id',
          ),
        ),
			),
			'project_name' => array(
			  'name' => 'project_name',
			  'title' => 'Project Name',
			  'description' => 'Human-readable name of the project this experiment was part of',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'polymorphic_with' => array(
			  'name' => 'polymorphic_with',
			  'title' => 'Polymorphic With',
			  'description' => 'The stock_id of stocks with a different allele than the current one.',
			  'type' => 'varchar(255)',
			  'handlers' => array(
          'field' => array('name' => 'views_handler_field'),
          'filter' => array('name' => 'views_handler_filter_string'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),
			'nd_genotype_experiment_id' => array(
			  'name' => 'nd_genotype_experiment_id',
			  'title' => 'ND Genotype Experiment ID',
			  'description' => 'Unique ID of the Genotype Experiment',
			  'type' => 'serial',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_numeric'),
          'filter' => array('name' => 'views_handler_filter_numeric'),
          'sort' => array('name' => 'views_handler_sort'),
        ),
        'joins' => array(),
			),

			// Calculated Field: genotype.description from nd_genotype_experiment.genotype_description
      // Allows filtering based on germplasm
      'germplasm_genotype' => array(
        'name' => 'germplasm_genotype',
        'title' => 'Genotypes for Stock',
        'description' => 'Genotypes of a given stock for each marker.',
        'type' => 'text',
        'handlers' => array(
          'field' => array('name' => 'views_handler_field_germplasm_genotype'),
          'filter' => array('name' => 'views_handler_filter_germplasm_genotype_by_stock'),
        ),
        'joins' => array(),
      ),

      // Calculated Filter: Allows dynamic addition of multiple germplasm_genotype fields
      'add_germplasm_genotype' => array(
        'name' => 'add_germplasm_genotype',
        'title' => 'Genotypes for Multiple Stocks',
        'description' => 'Genotypes of a given stock for each marker; form allows specifying multiple stocks.',
        'type' => 'text',
        'handlers' => array(
          'filter' => array('name' => 'views_handler_filter_add_germplasm_genotype_by_stock_field_filter'),
        ),
        'joins' => array(),
      ),

      // Calculated Filter: Allows dynamic addition of multiple germplasm_genotype fields
      'polymorphic_germplasm' => array(
        'name' => 'polymorphic_germplasm',
        'title' => 'Polymorphic Markers',
        'description' => 'Only show markers polymorphic between two stocks.',
        'type' => 'text',
        'handlers' => array(
          'filter' => array('name' => 'views_handler_filter_germplasm_genotype_polymorphic'),
        ),
        'joins' => array(),
      ),
    ),
  );
}