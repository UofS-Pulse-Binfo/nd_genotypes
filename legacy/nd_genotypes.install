<?php

//module_load_include('tripal_views','tripal_views.api','inc');

// Materialized Views
require_once 'includes/mviews/nd_genotype_experiment.inc';
require_once 'includes/nd_genotypes.bulk_loader_template.inc';

/**
 * Implements hook_enable().
 *
 * When the module is enabled:
 *   1. Add the nd_genotype_experiment materialized view
 *   2. Add ND Genotype Bulk Loader
 */
function nd_genotypes_install () {

	// Add nd_genotype_experiment MView
  nd_genotypes_register_nd_genotype_experiment_mview();

  // Add nd_genotype_germplasm MView.
  nd_genotypes_register_nd_genotype_germplasm_mview();

  // Add Generic Bulk Loader
  if (module_exists('tripal_bulk_loader')) {
 	  nd_genotypes_add_generic_experiment_bulk_loader();
  }

    db_update('system')
    ->fields(array('weight' => 2))
    ->condition('name', 'nd_genotypes', '=')
    ->execute();
}

/**
 * Implements hook_enable().
 *
 * When the module is enabled:
 *   1. Add nd_genotype_experiment views integration
 *   2. Add reciprocal joins to linked tables
 */
function nd_genotypes_enable () {

}

/**
 * Implements hook_disable().
 *
 * When the module is disabled:
 *   1. Removes views integrations
 *   2. Disables default views
 */
function nd_genotypes_disable () {

  tripal_disable_view('nd_genotypes_feature_genotype_chart_pie');
  tripal_disable_view('nd_genotypes_genotype_matrix');
  tripal_disable_view('nd_genotypes_genotype_matrix_germplasm_list');

  tripal_remove_views_integration(array(
    'table_name' => 'nd_genotype_experiment',
    'priority' => 9
  ));

}

/**
 * Implements hook_uninstall().
 *
 * When the module is uninstalled:
 *   1. Removes materialized view
 */
function nd_genotypes_uninstall () {

	// remove the nd_genotype_experiment materialized view
   $mview = tripal_mviews_get_mview_id('nd_genotype_experiment');
   if($mview){
	   tripal_mviews_action('delete',$mview);
	}

	// remove the nd_genotype_experiment materialized view
   $mview = tripal_mviews_get_mview_id('nd_genotype_germplasm');
   if($mview){
	   tripal_mviews_action('delete',$mview);
	}
}

/**
 * Creates a materialized view that stores the type & number of features per organism
 *
 * @TODO: IS THIS NEEDED?
 *
 * @ingroup nd_genotypes
 */
function nd_genotypes_add_project_count_mview() {
  $view_name = 'project_organism_feature_count';
  $comment = 'Stores the type and number of features per organism per project';

  $schema = array(
    'description' => $comment,
    'table' => $view_name,
    'fields' => array(
      'project_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'organism_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'organism_name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'subtype' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'num_features' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'project_organism_feature_count_idx1' => array('project_id'),
      'project_organism_feature_count_idx1' => array('organism_id'),
      'project_organism_feature_count_idx2' => array('type'),
      'project_organism_feature_count_idx3' => array('subtype'),
    ),
  );

  $sql = "
    SELECT
      P.project_id,
      P.name,
      O.organism_id,
      O.genus||' '||O.species as organism_name,
      (CASE WHEN FT.name IN ('SNP','indel','MNP') THEN 'variant' WHEN FT.name='marker' THEN 'marker' ELSE 'sequence' END) as type,
      (CASE WHEN FT.name='marker' THEN FP.value ELSE FT.name END) as subtype,
      count(distinct(PF.feature_id)) as num_features
    FROM project_feature PF
      LEFT JOIN project P ON P.project_id=PF.project_id
      LEFT JOIN feature F ON F.feature_id=PF.feature_id
      LEFT JOIN organism O ON O.organism_id=F.organism_id
      LEFT JOIN cvterm FT ON FT.cvterm_id=F.type_id
      LEFT JOIN featureprop FP ON FP.feature_id=F.feature_id
        AND FP.type_id IN (SELECT cvterm_id FROM cvterm WHERE name='marker_type')
    GROUP BY P.project_id, O.organism_id, FT.name, FP.value
    ORDER BY P.project_id, O.organism_id, type
  ";

  tripal_add_mview($view_name, 'nd_genotypes', $schema, $sql, $comment);
}
